error[E0716]: temporary value dropped while borrowed
  --> tests/ui/unify_temp_guards.rs:8:22
   |
8  |     match (guard!(), guard!()) {
   |            --------  ^^^^^^^^ creates a temporary which is freed while still in use
   |            |
   |            a temporary with access to the borrow is created here ...
...
11 | }
   | -
   | |
   | temporary value is freed at the end of this statement
   | ... and the borrow might be used here, when that temporary is dropped and runs the `Drop` code for type `Brand`
   |
   = note: consider using a `let` binding to create a longer lived value
   = note: the temporary is part of an expression at the end of a block;
           consider forcing this temporary to be dropped sooner, before the block's local variables are dropped
   = note: this error originates in the macro `guard` (in Nightly builds, run with -Z macro-backtrace for more info)
help: for example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block
   |
19 |         unsafe { let x = $crate::Guard::tie(&$crate::Brand::tie(&$crate::Id::new())); x }
   |                  +++++++                                                            +++
